<%@ jet 
	imports="
		org.talend.core.model.process.INode
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.ElementParameterParser
		java.util.List
		java.util.Map
	"
%>

	
	
    <%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();	

	String directory = ElementParameterParser.getValue(node, "__SOURCE__");
	String zipFile = ElementParameterParser.getValue(node, "__TARGET__");
	String level = ElementParameterParser.getValue(node, "__LEVEL__");
	boolean mkDir = ("true").equals(ElementParameterParser.getValue(node, "__MKDIR__"));
	boolean isAllFile = ("true").equals(ElementParameterParser.getValue(node, "__ALL_FILES__"));
	boolean subDir = ("true").equals(ElementParameterParser.getValue(node, "__SUB_DIRECTROY__"));
	boolean overwrite = ("true").equals(ElementParameterParser.getValue(node, "__OVERWRITE__"));
	String encoding = ElementParameterParser.getValue(node,"__ENCODING__");
	boolean isEncrypted = ("true").equals(ElementParameterParser.getValue(node, "__ENCRYPT_FILES__"));
	
	List<Map<String, String>> masks = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__MASK__");	
	
	String zip64Mode = ElementParameterParser.getValue(node, "__ZIP64_MODE__");
	String encryptMethod = ElementParameterParser.getValue(node, "__ENCRYPT_METHOD__");
	String aesKeyStrength = ElementParameterParser.getValue(node, "__AES_KEY_STRENGTH__");
	
	String archiveFormat = ElementParameterParser.getValue(node, "__ARCHIVE_FORMAT__");
	String sourceFile = ElementParameterParser.getValue(node, "__SOURCE_FILE__");
	
	boolean isSyncFlush = "true".equals(ElementParameterParser.getValue(node, "__USE_SYNC_FLUSH__"));


	if ("zip".equals(archiveFormat) || ("tgz".equals(archiveFormat))) {
	%>
		String sourceFile_<%=cid %> = <%=directory %>;
	<%
	}else{
	%>
		String sourceFile_<%=cid %> = <%=sourceFile %>;
	<%
	}
	%>
    String zipFile_<%=cid %> = <%=zipFile %>;
    
    com.talend.compress.zip.Zip zip_<%=cid%> = new com.talend.compress.zip.Zip(sourceFile_<%=cid %>, zipFile_<%=cid %>);
    zip_<%=cid%>.setOverwriteExistTargetZip(<%=overwrite%>);
	zip_<%=cid%>.setMakeTargetDir(<%=mkDir%>);
	zip_<%=cid%>.setCompressLevel(<%=level %>);
	zip_<%=cid%>.setArchiveFormat("<%=archiveFormat%>");
	zip_<%=cid%>.setAllFiles(<%=isAllFile%>);
	
	<% 
	if (!isAllFile) {
    %>  
    	//build filename pattern filter
	    String[] patterns_<%=cid %> = new String[<%=masks.size()%>];
    	<%
	    for(int i=0 ; i < masks.size() ; i++) {
	        Map<String, String> line = masks.get(i);
        %>
	        patterns_<%=cid %>[<%=i%>] = <%=line.get("FILEMASK")%>;
        <%
	    }
	    %>
  		StringBuilder sbf_<%=cid %> = new StringBuilder(); 
        sbf_<%=cid %>.append("(");
        for (int i_<%=cid %> = 0 ; i_<%=cid %> < patterns_<%=cid %>.length ; i_<%=cid %>++) {
            sbf_<%=cid %>.append(patterns_<%=cid %>[i_<%=cid %>].replaceAll("\\.", "\\\\.").replaceAll("\\*", ".*"));
            if(i_<%=cid %> != patterns_<%=cid %>.length-1) sbf_<%=cid %>.append("|");
        }        
        sbf_<%=cid %>.append(")");
        final String maskStr_<%=cid %> = new String(sbf_<%=cid %>.toString());
        
        //apply the filter
       	zip_<%=cid%>.setNamePatternFilter(maskStr_<%=cid %>);
	<% 
	}
	if("gzip".equals(archiveFormat) || ("tgz".equals(archiveFormat))){
	%>
		zip_<%=cid%>.setSyncFlush(<%=isSyncFlush%>);
	<%
	}else if ("zip".equals(archiveFormat)) {
	%>
	   zip_<%=cid%>.setContainSubDir(<%=subDir%>);
	   zip_<%=cid%>.setEncoding(<%=encoding%>);
	   zip_<%=cid%>.setZip64Mode("<%=zip64Mode%>");
	   zip_<%=cid%>.setEncrypted(<%=isEncrypted%>);
		        
	   <%
	   String passwordFieldName = "__PASSWORD__";
	   %>
	    
	   <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>
	    
	   zip_<%=cid%>.setPassword(decryptedPassword_<%=cid%>);
	   <%
	   if(!"JAVA_ENCRYPT".equals(encryptMethod)){
	   %>
	      zip_<%=cid%>.setUseZip4jEncryption(true);
	      zip_<%=cid%>.setEncryptionMethod(net.lingala.zip4j.util.Zip4jConstants.<%=encryptMethod%>);
	      <%
		  if("ENC_METHOD_AES".equals(encryptMethod)){
		  %>
	         zip_<%=cid%>.setAesKeyStrength(net.lingala.zip4j.util.Zip4jConstants.<%=aesKeyStrength%>);
	      <%
	   	  }
	   	}else{
	   	%>
		  zip_<%=cid%>.setUseZip4jEncryption(false);
	   <%
	   }
   }
   %>
  
  
   globalMap.put("<%=cid %>_ARCHIVE_FILEPATH",zipFile_<%=cid %>);
   
   globalMap.put("<%=cid %>_ARCHIVE_FILENAME", zipFile_<%=cid%>.contains("\\") ?
    zipFile_<%=cid%>.substring((zipFile_<%=cid%>.lastIndexOf("\\")+2)) : zipFile_<%=cid%>.substring((zipFile_<%=cid%>.lastIndexOf("/"))+1));

   zip_<%=cid%>.doZip();

